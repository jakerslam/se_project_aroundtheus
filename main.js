!function(){"use strict";class e{constructor(e,t,n){this._handleImageClick=n,this._cardImgUrl=e.link,this._cardName=e.name,this._cardElement=t.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__heart-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__img"),this._cardTitle=this._cardElement.querySelector(".card__title")}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLike),this._deleteButton.addEventListener("click",this._handleDelete),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._cardImgUrl,this._cardName)}))}_handleLike=()=>{this._likeButton.classList.toggle("card__heart-button_clicked")};_handleDelete=()=>{this._cardElement.remove(),this._cardElement=null};generateCard=()=>(this._cardImage.src=this._cardImgUrl,this._cardImage.alt="An image of "+this._cardName,this._cardTitle.textContent=this._cardName,this._setEventListeners(),this._cardElement)}class t{constructor(e,t){this._config=e,this._config.formSelector=`#${t.id}`,this._formElement=document.querySelector(this._config.formSelector)}_showInputError=e=>{const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.showErrorElClass),t.textContent=e.validationMessage};_hideInputError=e=>{const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.showErrorElClass),t.textContent=""};_hasInvalidInput=e=>e.some((e=>!e.validity.valid));_disableButton=e=>{e.classList.add(this._config.inactiveButtonClass),e.disabled=!0};_enableButton=e=>{e.classList.remove(this._config.inactiveButtonClass),e.disabled=!1};_toggleButtonState(e){const t=this._formElement.querySelector(this._config.submitButtonSelector);this._hasInvalidInput(e)?this._disableButton(t):this._enableButton(t)}_checkValidity=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e)};_resetValidation(e){this._toggleButtonState(e),e.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){const{inputSelector:e}=this._config,t=[...this._formElement.querySelectorAll(e)];t.forEach((e=>{e.addEventListener("input",(()=>{this._toggleButtonState(t,this._formElement),this._checkValidity(e)}))})),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._resetValidation(t)}))}enableValidation(){this._setEventListeners()}}class n{constructor(e){this._popUpElement=document.querySelector(e)}open(){this._popUpElement.classList.remove("modal_hidden"),this._popUpElement.classList.add("modal_visible-js"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popUpElement.classList.add("modal_hidden"),this._popUpElement.classList.remove("modal_visible-js"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton=this._popUpElement.querySelector(".modal__container-close-button"),this._popUpBox=this._popUpElement.querySelector(".modal__container_js"),this._closeButton.addEventListener("click",(()=>{this.close()})),this._popUpElement.addEventListener("click",(e=>{this._popUpBox.contains(e.target)||this.close()}))}}class o extends n{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popUpElement.querySelector(".modal__form")}_getInputValues(){const e=Array.from(this._form.querySelectorAll(".modal__container-input")),t={};return e.forEach(((e,n)=>{t[e.id]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}}const r={cardModal:document.querySelector("#card-modal"),cardForm:document.forms["card-form"],titleInput:document.querySelector(".modal__container-input_card-title-js"),linkInput:document.querySelector(".modal__container-input_card-url-js"),cardTemplate:document.querySelector("#cardTemplate").content},s={formSelector:".modal__form",inputSelector:".modal__container-input",submitButtonSelector:".modal__container-button",inactiveButtonClass:"modal__container-button_disabled",inputErrorClass:"modal__container-input_error",showErrorElClass:"modal__container_error-message_visible"},i={addCardButton:document.querySelector(".profile__add-button"),editOpenButton:document.querySelector(".profile__edit-button")},a={editProfileModal:document.querySelector("#edit-modal"),nameInput:document.querySelector("#edit-modal").querySelector(".modal__container-input_name"),profileBioInputEl:document.querySelector("#edit-modal").querySelector(".modal__container-input_bio"),profileNameEl:document.querySelector(".profile__author-title"),profileBioEl:document.querySelector(".profile__subtext")},l=new o("#edit-modal",(e=>{!function(e){console.log(e),u.setUserInfo(e["modal__container-input_name"],e["modal__container-input_bio"]),a.profileBioInputEl.value="",a.nameInput.value="",l.close()}(e)})),c=new o("#card-modal",(e=>{!function(e){console.log(e);const t=e["modal__container-input_title"],n=e["modal__container-input_url"];console.log("newCardEls.linkInput in addCard in index.js:",r.linkInput);const o=_({name:t,link:n});m.addItem(o),r.cardForm.reset(),c.close()}(e)})),d=new class extends n{constructor(e){super(e),this._popupImage=this._popUpElement.querySelector(".modal__container-image"),this._popupTitle=this._popUpElement.querySelector(".modal__container-image-title")}open(e){this._popupImage.src=e.cardImgUrl,this._popupImage.alt=`A photo of ${e.cardName}`,this._popupTitle.textContent=e.cardName,super.open()}}("#photoViewModal"),m=new class{constructor(e,t){let{items:n,renderer:o}=e;this._items=n,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);m.addItem(t)}},".cards"),u=new class{constructor(e,t){this._userJobElement=t,this._userNameElement=e}getUserInfo(){return{userJob:this._userJobElement.textContent,userName:this._userNameElement.textContent}}setUserInfo(e,t){this._userJobElement.textContent=t,this._userNameElement.textContent=e}}(a.profileNameEl,a.profileBioEl),_=t=>new e(t,r.cardTemplate,((e,t)=>{d.open({cardImgUrl:e,cardName:t})})).generateCard();m.renderItems(),Array.from(document.querySelectorAll(".modal")).forEach((e=>{(e=>{new t(s,e).enableValidation()})(e)})),i.addCardButton.addEventListener("click",(()=>{c.open()})),i.editOpenButton.addEventListener("click",(()=>{l.open(),function(){const e=u.getUserInfo();a.profileBioInputEl.value=e.userJob,a.nameInput.value=e.userName}()})),c.setEventListeners(),l.setEventListeners(),d.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,